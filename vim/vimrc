" -----------------------------------------------------------------------------
"  General
" -----------------------------------------------------------------------------
set nocompatible
set history=150
set encoding=utf8
set fileencoding=utf8
set ignorecase
set smartcase

filetype off
call pathogen#incubate()
call pathogen#helptags()

" -----------------------------------------------------------------------------
"  Backups
" -----------------------------------------------------------------------------

"if has("vms")
"    set nobackup              " do not keep a backup file, use versions instead
"endif


" -----------------------------------------------------------------------------
"  UI
" -----------------------------------------------------------------------------
set number
set ruler               " show the cursor position all the time
"set wildmenu
"set wildmode=list:longest
set hlsearch
set scrolloff=3
set mouse=a
set backspace=indent,eol,start

set showcmd             " display incomplete commands
set incsearch           " do incremental searching
set hlsearch


" -----------------------------------------------------------------------------
"  Visual Cues
" -----------------------------------------------------------------------------
filetype on                  " try to detect filetypes
filetype plugin indent on    " enable loading indent file for filetype
syntax on

set background=dark
colorscheme ir_black

" Set global color scheme.
let python_highlight_all = 1
if &term =~ '^\(xterm\|screen\)' && $TERM_PROGRAM != 'Apple_Terminal'
  set t_Co=256
endif
if &t_Co != 256
  let g:CSApprox_loaded=0
endif


" -----------------------------------------------------------------------------
"  Text Formatting
" -----------------------------------------------------------------------------
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
set expandtab

" -----------------------------------------------------------------------------
"  Custom Text Formatting
" -----------------------------------------------------------------------------
"au BufRead,BufNewFile Vagrantfile set filetype=ruby
"au BufRead,BufNewFile fabfile set filetype=python


" -----------------------------------------------------------------------------
"  Whitespace
" -----------------------------------------------------------------------------
"highlight ExtraWhiteSpace ctermbg=red guibg=red
":match ExtraWhiteSpace /\s\+$\|\t\+/
"match ExtraWhitespace /\s\+$\|\t\+/


" -----------------------------------------------------------------------------
"  Autocommands
" -----------------------------------------------------------------------------
" Only do this part when compiled with support for autocommands.
if has("autocmd")
    autocmd BufWritePre * :%s/\s\+$//e
    autocmd colorscheme * highlight ExtraWhitespace ctermbg=red guibg=red

    " Put these in an autocmd group, so that we can delete them easily.
    augroup vimrcEx
        au!

        " For all text files set 'textwidth' to 78 characters.
        autocmd FileType text setlocal textwidth=78

        " When editing a file, jump to the last known cursor position.
        autocmd BufReadPost *
                    \ if line("'\"") > 0 && line("'\"") <= line("$") |
                    \   exe "normal g`\"" |
                    \ endif
    augroup END
endif


" -----------------------------------------------------------------------------
"  Variables
" -----------------------------------------------------------------------------
let mapleader=","


" -----------------------------------------------------------------------------
"  Mappings
" -----------------------------------------------------------------------------
" working directory follows current file
map Q gq


" execute file being edited with <Shift> + e:
"map <buffer> <S-e> :w<CR>:!/usr/bin/env python % <CR>

" map window movement commands
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h


" -----------------------------------------------------------------------------
" Virtualenv
" -----------------------------------------------------------------------------
" Add the virtualenv's site-packages to vim path
"py << EOF
"import os.path
"import sys
"import vim
"if 'VIRTUAL_ENV' in os.environ:
"    project_base_dir = os.environ['VIRTUAL_ENV']
"    sys.path.insert(0, project_base_dir)
"    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"    execfile(activate_this, dict(__file__=activate_this))
"EOF


" -----------------------------------------------------------------------------
" Jedi-Vim
" -----------------------------------------------------------------------------
if has("autocmd")
    autocmd FileType python setlocal completeopt-=preview
end
let g:jedi#use_splits_not_buffers = "left"
"let g:jedi#popup_on_dot = 0


" -----------------------------------------------------------------------------
" SuperTab
" -----------------------------------------------------------------------------
let g:SuperTabDefaultCompletionType = "<c-n>"


" -----------------------------------------------------------------------------
" Syntastic
" -----------------------------------------------------------------------------
let g:syntastic_python_checkers=['pep8', 'pylint']


" -----------------------------------------------------------------------------
" Ack
" -----------------------------------------------------------------------------
nmap <leader>a <Esc>:Ack!


" -----------------------------------------------------------------------------
"  TaskList
" -----------------------------------------------------------------------------
map T :TaskList<CR>


" -----------------------------------------------------------------------------
"  NERDTree
" -----------------------------------------------------------------------------
nmap <silent> <c-n> :NERDTreeToggle<CR>
let NERDTreeIgnore          = ['\.pyc$','\.swp$']
let NERDTreeWinPos          = 'left'
let NERDTreeSplitVertical   = 1
let NERDTreeChDirMode       = 2
let NERDTreeShowBookmarks   = 1


" -----------------------------------------------------------------------------
"  NERDCommenter
" -----------------------------------------------------------------------------
map ,c <leader>cl
map ,d <leader>cu


" -----------------------------------------------------------------------------
"  Folding
" -----------------------------------------------------------------------------
map zz za
au BufWinLeave *.xul mkview
au BufWinEnter *.xul silent loadview
au BufWinLeave *.xml mkview
au BufWinEnter *.xml silent loadview
let javaScript_fold=1
